// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "https",
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Student enrollment service",
    "title": "Student enrollment",
    "version": "1.0.0"
  },
  "basePath": "/v2",
  "paths": {
    "/fetchStudents": {
      "get": {
        "description": "Multiple status values can be provided with comma separated strings",
        "produces": [
          "application/json"
        ],
        "tags": [
          "student"
        ],
        "summary": "Finds students by multiple options",
        "operationId": "findStudentsByStatus",
        "parameters": [
          {
            "type": "integer",
            "description": "find by id of the student",
            "name": "Id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Find students by class",
            "name": "class",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Student"
              }
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/student": {
      "put": {
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "tags": [
          "student"
        ],
        "summary": "Update an existing student",
        "operationId": "updateStudent",
        "parameters": [
          {
            "description": "Student object need to update",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "class": {
                  "type": "string",
                  "example": "3 C"
                },
                "id": {
                  "type": "integer",
                  "example": 23454
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Student updated"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      },
      "post": {
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "tags": [
          "student"
        ],
        "summary": "Add a new student",
        "operationId": "addStudent",
        "parameters": [
          {
            "description": "Student to enroll",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Student"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Student updated"
          },
          "405": {
            "description": "Method not allowed"
          },
          "500": {
            "description": "Invalid Input"
          }
        }
      },
      "delete": {
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "tags": [
          "student"
        ],
        "summary": "Deletes a student",
        "operationId": "deleteStudent",
        "parameters": [
          {
            "description": "Student object need to delete",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "example": 23454
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Student deleted"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Pet not found"
          }
        }
      }
    }
  },
  "definitions": {
    "ApiResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "Student": {
      "type": "object",
      "required": [
        "id",
        "firstName",
        "lastName",
        "class",
        "nationality"
      ],
      "properties": {
        "class": {
          "type": "string",
          "example": "3 A"
        },
        "firstName": {
          "type": "string",
          "example": "mike"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "lastName": {
          "type": "string",
          "example": "wong"
        },
        "nationality": {
          "type": "string",
          "example": "Singapore"
        }
      },
      "xml": {
        "name": "Student"
      }
    }
  },
  "tags": [
    {
      "description": "Student enrollment endpoints",
      "name": "student",
      "externalDocs": {
        "description": "Git url",
        "url": "https://github.com/Cinojose/StudentEnrollmentApi"
      }
    }
  ],
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "https",
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Student enrollment service",
    "title": "Student enrollment",
    "version": "1.0.0"
  },
  "basePath": "/v2",
  "paths": {
    "/fetchStudents": {
      "get": {
        "description": "Multiple status values can be provided with comma separated strings",
        "produces": [
          "application/json"
        ],
        "tags": [
          "student"
        ],
        "summary": "Finds students by multiple options",
        "operationId": "findStudentsByStatus",
        "parameters": [
          {
            "type": "integer",
            "description": "find by id of the student",
            "name": "Id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Find students by class",
            "name": "class",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Student"
              }
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/student": {
      "put": {
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "tags": [
          "student"
        ],
        "summary": "Update an existing student",
        "operationId": "updateStudent",
        "parameters": [
          {
            "description": "Student object need to update",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "class": {
                  "type": "string",
                  "example": "3 C"
                },
                "id": {
                  "type": "integer",
                  "example": 23454
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Student updated"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      },
      "post": {
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "tags": [
          "student"
        ],
        "summary": "Add a new student",
        "operationId": "addStudent",
        "parameters": [
          {
            "description": "Student to enroll",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Student"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Student updated"
          },
          "405": {
            "description": "Method not allowed"
          },
          "500": {
            "description": "Invalid Input"
          }
        }
      },
      "delete": {
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "tags": [
          "student"
        ],
        "summary": "Deletes a student",
        "operationId": "deleteStudent",
        "parameters": [
          {
            "description": "Student object need to delete",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "example": 23454
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Student deleted"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Pet not found"
          }
        }
      }
    }
  },
  "definitions": {
    "ApiResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "Student": {
      "type": "object",
      "required": [
        "id",
        "firstName",
        "lastName",
        "class",
        "nationality"
      ],
      "properties": {
        "class": {
          "type": "string",
          "example": "3 A"
        },
        "firstName": {
          "type": "string",
          "example": "mike"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "lastName": {
          "type": "string",
          "example": "wong"
        },
        "nationality": {
          "type": "string",
          "example": "Singapore"
        }
      },
      "xml": {
        "name": "Student"
      }
    }
  },
  "tags": [
    {
      "description": "Student enrollment endpoints",
      "name": "student",
      "externalDocs": {
        "description": "Git url",
        "url": "https://github.com/Cinojose/StudentEnrollmentApi"
      }
    }
  ],
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}`))
}
